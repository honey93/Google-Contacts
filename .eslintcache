[{"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/reportWebVitals.js":"1","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/App.js":"2","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Header.js":"3","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/ContactsList.js":"4","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/IndividualContact.js":"5","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/index.js":"6","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Login.js":"7"},{"size":362,"mtime":1606402236455,"results":"8","hashOfConfig":"9"},{"size":1734,"mtime":1606718404847,"results":"10","hashOfConfig":"9"},{"size":1367,"mtime":1606677843730,"results":"11","hashOfConfig":"9"},{"size":3827,"mtime":1606757975915,"results":"12","hashOfConfig":"9"},{"size":2424,"mtime":1606757856641,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1606402236454,"results":"14","hashOfConfig":"9"},{"size":1662,"mtime":1606726153979,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fmm6lq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/reportWebVitals.js",[],"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/App.js",["33","34","35"],"import logo from \"./logo.svg\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport ContactsList from \"./components/ContactsList\";\nimport Login from \"./components/Login\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", email: \"\", photo: \"\" };\n    this.setHeader = this.setHeader.bind(this);\n  }\n\n  setHeader(data) {\n    this.setState({ name: data.name, email: data.email, photo: data.photo });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          {/* <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/contacts\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/dashboard\">Dashboard</Link>\n            </li>\n          </ul>\n\n          <hr /> */}\n\n          {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Login></Login>\n            </Route>\n            <Route path=\"/contacts\">\n              <Header details={this.state} ></Header>\n              <ContactsList setHeader={this.setHeader}></ContactsList>\n            </Route>\n            <Route path=\"/dashboard\">\n              <ContactsList></ContactsList>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Header.js",["36","37"],"import React from \"react\";\nimport headerSvg from \"../icons/Header_bar.svg\";\nimport Logout from \"../icons/Logout.svg\";\nimport styled from \"styled-components\";\n\nconst HeaderParent = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 78px;\n  background-size: cover;\n  background-image: url(${headerSvg});\n  color: white;\n  padding: 0 60px;\n  box-sizing: border-box;\n`;\n\nconst Image = styled.img`\nborder-radius:50%;\n`;\n\nconst HeaderChildLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  text-align: left;\n`;\n\nconst HeaderChildText = styled.div`\n  margin-left: 14px;\n`;\n\nconst UserName = styled.div`\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nconst HeaderChildRight = styled.div``;\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <HeaderParent>\n        <HeaderChildLeft>\n          <div>\n            <Image src={this.props.details.photo} width=\"40\" />\n          </div>\n\n          <HeaderChildText>\n            <UserName>{this.props.details.name}</UserName>\n            <div>{this.props.details.email}</div>\n          </HeaderChildText>\n        </HeaderChildLeft>\n\n        <HeaderChildRight>\n          <img src={Logout} />\n        </HeaderChildRight>\n      </HeaderParent>\n    );\n  }\n}\n\nexport default Header;\n","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/ContactsList.js",["38"],"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/IndividualContact.js",["39"],"import React from \"react\";\n\nimport bin from \"../icons/bin-2-alternate.svg\";\n\nimport styled from \"styled-components\";\n\nconst AddressTile = styled.div`\n  background: #ffffff;\n  box-shadow: 0px 2px 6px rgba(5, 62, 209, 0.14);\n  border-radius: 8px;\n  color: black;\n  display: flex;\n  justify-content: space-between;\n  height: 60px;\n  align-items: center;\n  padding-left: 48px;\n  padding-right: 120px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  font-weight: 500;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  box-sizing:border-box;\n\n  border: ${props => props.primary ? \"1px solid #4EB4FF\" : \"0 solid #4EB4FF\"}\n`;\n\nconst PhotoName = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 33%;\n  box-size: border-box;\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0 10px;\n  }\n`;\n\nconst Image = styled.img`\n  border-radius: 50%;\n`;\n\nconst ActualName = styled.div`\n  margin-left: 10px;\n`;\n\nconst Email = styled.div`\n  text-align: left;\n  width: 33%;\n  box-size: border-box;\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0 10px;\n  }\n`;\n\nconst Phone = styled.div`\n  text-align: left;\n  width: 33%;\n  box-size: border-box;\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0 10px;\n  }\n`;\nclass IndividualContact extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n\n    this.state = { hoverFlag: false };\n\n    this.changeBackground = this.changeBackground.bind(this);\n  }\n\n  changeBackground(status) {\n    // e.target.style.borderColor = \"#4EB4FF\";\n\n    this.setState({ hoverFlag: status });\n  }\n\n  render() {\n    let binf,check;\n    if (this.state.hoverFlag) {\n      binf = <img src={bin} />;\n      check = <input type=\"checkbox\" />;\n    } else {\n      binf = \"\";\n      check = \"\";\n    }\n\n   \n\n\n    return (\n      <AddressTile primary={this.state.hoverFlag}\n        onMouseOver={()=>{this.changeBackground(true)}}\n        onMouseOut={()=>{this.changeBackground(false)}}\n      >\n      {check}\n        <PhotoName>\n          {\" \"}\n          <Image src={this.props.details.photo} width=\"30\" />{\" \"}\n          <ActualName> {this.props.details.name} </ActualName>{\" \"}\n        </PhotoName>\n        <Email> {this.props.details.email}</Email>\n        <Phone> {this.props.details.phone} </Phone>\n\n        {binf}\n      </AddressTile>\n    );\n  }\n}\n\nexport default IndividualContact;\n","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/index.js",[],"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Login.js",["40","41","42"],{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":3,"column":50,"nodeType":"45","messageId":"46","endLine":3,"endColumn":54},{"ruleId":"43","severity":1,"message":"48","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":42,"column":3,"nodeType":"51","messageId":"52","endLine":44,"endColumn":4},{"ruleId":"53","severity":1,"message":"54","line":61,"column":11,"nodeType":"55","endLine":61,"endColumn":31},{"ruleId":"56","severity":1,"message":"57","line":133,"column":36,"nodeType":"58","messageId":"59","endLine":133,"endColumn":38},{"ruleId":"53","severity":1,"message":"54","line":89,"column":14,"nodeType":"55","endLine":89,"endColumn":31},{"ruleId":"43","severity":1,"message":"60","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":20},{"ruleId":"43","severity":1,"message":"61","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":71,"column":13,"nodeType":"55","endLine":71,"endColumn":33},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'styled' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'Redirect' is defined but never used."]