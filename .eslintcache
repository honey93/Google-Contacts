[{"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/reportWebVitals.js":"1","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/App.js":"2","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Header.js":"3","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/ContactsList.js":"4","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/IndividualContact.js":"5","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/index.js":"6","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Login.js":"7"},{"size":362,"mtime":1606402236455,"results":"8","hashOfConfig":"9"},{"size":1734,"mtime":1606718404847,"results":"10","hashOfConfig":"9"},{"size":1367,"mtime":1606677843730,"results":"11","hashOfConfig":"9"},{"size":2961,"mtime":1606726164806,"results":"12","hashOfConfig":"9"},{"size":1375,"mtime":1606726159053,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1606402236454,"results":"14","hashOfConfig":"9"},{"size":1662,"mtime":1606726153979,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fmm6lq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/reportWebVitals.js",[],"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/App.js",["32","33","34"],"import logo from \"./logo.svg\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport ContactsList from \"./components/ContactsList\";\nimport Login from \"./components/Login\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", email: \"\", photo: \"\" };\n    this.setHeader = this.setHeader.bind(this);\n  }\n\n  setHeader(data) {\n    this.setState({ name: data.name, email: data.email, photo: data.photo });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          {/* <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/contacts\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/dashboard\">Dashboard</Link>\n            </li>\n          </ul>\n\n          <hr /> */}\n\n          {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Login></Login>\n            </Route>\n            <Route path=\"/contacts\">\n              <Header details={this.state} ></Header>\n              <ContactsList setHeader={this.setHeader}></ContactsList>\n            </Route>\n            <Route path=\"/dashboard\">\n              <ContactsList></ContactsList>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Header.js",["35","36"],"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/ContactsList.js",["37"],"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/IndividualContact.js",["38"],"import React from \"react\";\n\nimport Person from \"../icons/Person.svg\";\n\nimport styled from \"styled-components\";\n\nconst AddressTile = styled.div`\n  background: #ffffff;\n  box-shadow: 0px 2px 6px rgba(5, 62, 209, 0.14);\n  border-radius: 8px;\n  color: black;\n  display: flex;\n  justify-content: space-between;\n  height: 60px;\n  align-items: center;\n  padding-left: 48px;\n  padding-right: 120px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  font-weight: 500;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items:flex-start;\n    \n  }\n`;\n\nconst PhotoName = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\n\nconst Image = styled.img`\nborder-radius:50%;\n`;\n\nconst ActualName = styled.div`\n  margin-left: 10px;\n`;\n\n\nconst Email = styled.div`\ntext-align:left;\n`;\n\nconst Phone = styled.div`\ntext-align:left;\n`;\nclass IndividualContact extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  render() {\n    return (\n      <AddressTile>\n        <PhotoName>\n          {\" \"}\n          <Image src={this.props.details.photo} width=\"30\" /> <ActualName> {this.props.details.name} </ActualName>{\" \"}\n        </PhotoName>\n        <Email> {this.props.details.email}</Email>\n        <Phone> {this.props.details.phone} </Phone>\n      </AddressTile>\n    );\n  }\n}\n\n\nexport default IndividualContact;\n","/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/index.js",[],"/Users/honeythakuria/sample_apps/google-contacts/google-contacts/src/components/Login.js",["39","40","41"],{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":3,"column":50,"nodeType":"44","messageId":"45","endLine":3,"endColumn":54},{"ruleId":"42","severity":1,"message":"47","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":42,"column":3,"nodeType":"50","messageId":"51","endLine":44,"endColumn":4},{"ruleId":"52","severity":1,"message":"53","line":61,"column":11,"nodeType":"54","endLine":61,"endColumn":31},{"ruleId":"55","severity":1,"message":"56","line":106,"column":36,"nodeType":"57","messageId":"58","endLine":106,"endColumn":38},{"ruleId":"42","severity":1,"message":"59","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":14},{"ruleId":"42","severity":1,"message":"60","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":20},{"ruleId":"42","severity":1,"message":"61","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":71,"column":13,"nodeType":"54","endLine":71,"endColumn":33},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'styled' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Person' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used."]